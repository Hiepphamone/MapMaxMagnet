print("AAAAAAAAAAAAAAAAAAAAA")
repeat wait(1) until game.Players
repeat wait(1) until game.Players.LocalPlayer
repeat wait(1) until game.ReplicatedStorage
repeat wait(1) until game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")
repeat wait(1) until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Main")
local vu = game:GetService("VirtualUser")
local plr = game.Players.LocalPlayer
local Client = require(game.ReplicatedStorage.Library.Client)

function getlastmap()
    return Client.ZoneCmds.GetMaxOwnedZone()
end

function formatmap(text)
    local result = string.match(text, "| (.*)$")
    return result
end

function jump()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, 32, false, game)
    wait(4)
    game:GetService("VirtualInputManager"):SendKeyEvent(false, 32, false, game)
end
function formatclient(name)
    local pattern = " table: .*$"
    local result = name:gsub(pattern, "") 
    return result
end

function getlocation()
    for i,v in pairs(workspace.Map:GetChildren()) do
        if formatmap(v.Name) == formatclient(getlastmap()) then
            return v.INTERACT.BREAK_ZONES.BREAK_ZONE
        end
    end
    return false
end

function getflag()
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Misc._byUID) do
        if v._data.id == "Magnet Flag" then
            return {v._data.id,i}
        end
    end
end

function attack()
    local a = {}
    for i,v in pairs(game:GetService("Workspace")["__THINGS"].Breakables:GetChildren()) do
        for i1,v1 in pairs(v:GetChildren()) do
            if (v1.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 60 and #a < 2 then
                return v.Name
            end
        end
    end
end

function autofarm()
    if getlocation() ~= false then
        if (plr.Character.HumanoidRootPart.Position - getlocation().Position).Magnitude > 30 then
            plr.Character.HumanoidRootPart.CFrame = getlocation().CFrame
        end
    else
        local args = {
            [1] = formatclient(getlastmap())
        }
        
        game:GetService("ReplicatedStorage").Network.Teleports_RequestTeleport:InvokeServer(unpack(args))
    end
end

spawn(function()
    while true do wait()
        pcall(autofarm)
    end
end)

spawn(function()
    while true do wait()
        pcall(function()
            local tickm = tick()
            repeat wait()
            until tick() - tickm >= 30
            jump()
        end)
    end
end)

function click2(a)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-50,a.AbsolutePosition.Y+50,0,true,a,1)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-50,a.AbsolutePosition.Y+50,0,false,a,1)
end

function getfruit()
    local Client = require(game.ReplicatedStorage.Library.Client)
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Fruit._byUID) do
        Client.FruitCmds.Consume(i)
        wait(1)
        click2(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Contents.Ok)
    end
end

spawn(function()
    while true do wait(10)
        pcall(getfruit)
    end
end)

spawn(function()
    while true do wait(1)
        pcall(function() 
        click2(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Contents.Ok)
        end)
    end
end)

spawn(function()
    while true do wait(60)
        pcall(function()
            Client.ZoneFlagCmds.Consume(getflag()[1],getflag()[2])
        end)
    end
end)
